{"version":3,"sources":["components/Login/Login.module.css","components/UI/Card/Card.module.css","components/UI/Button/Button.module.css","components/Home/Home.module.css","components/MainHeader/Navigation.module.css","components/MainHeader/MainHeader.module.css","store/auth-context.js","components/UI/Card/Card.js","components/UI/Button/Button.js","components/Login/Login.js","components/Home/Home.js","components/MainHeader/Navigation.js","components/MainHeader/MainHeader.js","App.js","index.js"],"names":["module","exports","login","control","invalid","actions","card","button","home","nav","main-header","AuthContext","React","createContext","isLoggedIn","Card","props","react_default","a","createElement","className","concat","classes","children","Button","type","onClick","disabled","emailReducer","state","action","value","val","isValid","includes","passwordReducer","trim","length","Login","ctx","useContext","_useState","useState","_useState2","Object","slicedToArray","formIsValid","setFormIsValid","_useReducer","useReducer","undefined","_useReducer2","emailState","dispatchEmail","_useReducer3","_useReducer4","passwordState","dispatchPassword","emailIsValid","passwordIsValid","useEffect","checkLogin","setTimeout","console","log","clearTimeout","UI_Card_Card","onSubmit","event","preventDefault","onLogin","htmlFor","id","onChange","target","onBlur","UI_Button_Button","btn","Home","Navigation","href","onLogout","MainHeader","isAuthenticated","dummydatabase","dummy@account.xyz","App","setIsLoggedIn","_useState3","database","userIsLogged","localStorage","getItem","auth_context","Provider","email","password","setItem","window","alert","removeItem","components_MainHeader_MainHeader","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.3dd7c249.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__37FS8\",\"control\":\"Login_control__jV9_h\",\"invalid\":\"Login_invalid__axCjT\",\"actions\":\"Login_actions__1-1F4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2-gUl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__31m_C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__3Q_IV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__Mkeyz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-header\":\"MainHeader_main-header__3v4UE\"};","import React from 'react';\n\nconst AuthContext = React.createContext({\n    isLoggedIn: false,\n});\n\nexport default AuthContext;\n","import React from 'react';\n\nimport classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <div className={`${classes.card} ${props.className}`}>{props.children}</div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport classes from './Button.module.css';\n\nconst Button = (props) => {\n  return (\n    <button\n      type={props.type || 'button'}\n      className={`${classes.button} ${props.className}`}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useState, useEffect, useReducer, useContext } from 'react';\nimport AuthContext from '../../store/auth-context';\n// Components\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\n// Reducer functions\nconst emailReducer = (state, action) => {\n    if (action.type === 'USER_INPUT') {\n        // Checks if the event target value\n        // provided by the dispatch has an @\n        // and returns the actual value and the check\n        return { value: action.val, isValid: action.val.includes('@') };\n    } else if (action.type === 'INPUT_BLUR') {\n        // Checks if user finished writing\n        // Using the state snapshot to access the last state value\n        return { value: state.value, isValid: state.value.includes('@') };\n    }\n    // Otherwise returns the initial state\n    return { value: '', isValid: false };\n};\n// Same logic applied before with the password\nconst passwordReducer = (state, action) => {\n    if (action.type === 'USER_INPUT') {\n        return { value: action.val, isValid: action.val.trim().length > 6 };\n    } else if (action.type === 'INPUT_BLUR') {\n        return { value: state.value, isValid: state.value.trim().length > 6 };\n    }\n    // Otherwise returns the initial state\n    return { value: '', isValid: false };\n};\n\nexport default function Login() {\n    // Context\n    const ctx = useContext(AuthContext);\n\n    // State\n    const [formIsValid, setFormIsValid] = useState(false);\n\n    // Reducers\n    const [emailState, dispatchEmail] = useReducer(emailReducer, {\n        // Initial state\n        value: '',\n        isValid: undefined,\n    });\n    const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n        // Initial state\n        value: '',\n        isValid: undefined,\n    });\n\n    // Destructuring for better performance\n    // and not overchecking side effects\n    const { isValid: emailIsValid } = emailState,\n        { isValid: passwordIsValid } = passwordState;\n\n    // Effects\n    useEffect(() => {\n        // Check for changes every 500ms and not with every key press\n        const checkLogin = setTimeout(() => {\n            setFormIsValid(emailIsValid && passwordIsValid);\n        }, 500);\n        // Clearup function\n        return () => {\n            console.log('Cleanup');\n            clearTimeout(checkLogin);\n        };\n    }, [emailIsValid, passwordIsValid]);\n    // The object properties were passed as dependencies\n    // So checks will stop when the values are true\n    // If you use the object instead the effect will be triggered\n    // with every change in it, even if it is not inside the\n    // dependencies array\n\n    // Input managers\n    const emailChangeHandler = event => {\n            // We pass a val field in the dispatch function\n            // that holds the event target value\n            dispatchEmail({\n                type: 'USER_INPUT',\n                val: event.target.value,\n            });\n        },\n        passwordChangeHandler = event => {\n            dispatchPassword({\n                type: 'USER_INPUT',\n                val: event.target.value,\n            });\n        };\n\n    // Validators\n    const validateEmailHandler = () => {\n            dispatchEmail({ type: 'INPUT_BLUR' });\n        },\n        validatePasswordHandler = () => {\n            dispatchPassword({ type: 'INPUT_BLUR' });\n        };\n\n    // Submision\n    const submitHandler = event => {\n        event.preventDefault();\n        ctx.onLogin(emailState.value, passwordState.value);\n    };\n\n    return (\n        <Card className={classes.login}>\n            <form onSubmit={submitHandler}>\n                <div\n                    className={`${classes.control} ${\n                        emailState.isValid === false ? classes.invalid : ''\n                    }`}\n                >\n                    <label htmlFor='email'>E-Mail</label>\n                    <input\n                        type='email'\n                        id='email'\n                        value={emailState.value}\n                        onChange={emailChangeHandler}\n                        onBlur={validateEmailHandler}\n                    />\n                </div>\n                <div\n                    className={`${classes.control} ${\n                        passwordState.isValid === false ? classes.invalid : ''\n                    }`}\n                >\n                    <label htmlFor='password'>Password</label>\n                    <input\n                        type='password'\n                        id='password'\n                        value={passwordState.value}\n                        onChange={passwordChangeHandler}\n                        onBlur={validatePasswordHandler}\n                    />\n                </div>\n                <div className={classes.actions}>\n                    <Button\n                        type='submit'\n                        className={classes.btn}\n                        disabled={!formIsValid}\n                    >\n                        Login\n                    </Button>\n                </div>\n            </form>\n        </Card>\n    );\n}\n","import React from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Home.module.css';\n\nexport default function Home() {\n    return (\n        <Card className={classes.home}>\n            <h1>Welcome back!</h1>\n        </Card>\n    );\n}\n","import React, { useContext } from 'react';\nimport classes from './Navigation.module.css';\nimport AuthContext from '../../store/auth-context';\n\nexport default function Navigation() {\n    const ctx = useContext(AuthContext);\n    return (\n        <nav className={classes.nav}>\n            <ul>\n                {ctx.isLoggedIn && (\n                    <li>\n                        <a href='/'>Users</a>\n                    </li>\n                )}\n                {ctx.isLoggedIn && (\n                    <li>\n                        <a href='/'>Admin</a>\n                    </li>\n                )}\n                {ctx.isLoggedIn && (\n                    <li>\n                        <button onClick={ctx.onLogout}>Logout</button>\n                    </li>\n                )}\n            </ul>\n        </nav>\n    );\n}\n","import React from 'react';\n\nimport Navigation from './Navigation';\nimport classes from './MainHeader.module.css';\n\nconst MainHeader = (props) => {\n  return (\n    <header className={classes['main-header']}>\n      <h1>A Typical Page</h1>\n      <Navigation isLoggedIn={props.isAuthenticated} onLogout={props.onLogout} />\n    </header>\n  );\n};\n\nexport default MainHeader;\n","import React, { useState, useEffect } from 'react';\n// Components\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\n// Contexts\nimport AuthContext from './store/auth-context';\n// Dummy account\nconst dummydatabase = { 'dummy@account.xyz': '1234567890' };\n\nexport default function App() {\n    const [isLoggedIn, setIsLoggedIn] = useState(false),\n        [database] = useState(dummydatabase);\n\n    useEffect(() => {\n        const userIsLogged = localStorage.getItem('isLoggedIn');\n        setIsLoggedIn(userIsLogged === '1' ? true : false);\n    }, []);\n\n    const loginHandler = (email, password) => {\n        // Check that password and email match\n        if (database[email] === password) {\n            // Set a login storage persistent value\n            localStorage.setItem('isLoggedIn', '1');\n            setIsLoggedIn(true);\n        } else {\n            window.alert('Wrong password');\n        }\n    };\n\n    const logoutHandler = () => {\n        // Clears storage for logout persistency\n        localStorage.removeItem('isLoggedIn');\n        setIsLoggedIn(false);\n    };\n\n    return (\n        <AuthContext.Provider\n            value={{\n                isLoggedIn: isLoggedIn,\n                onLogin: loginHandler,\n                onLogout: logoutHandler,\n            }}\n        >\n            <MainHeader />\n            <main>\n                {!isLoggedIn && <Login database={database} />}\n                {isLoggedIn && <Home />}\n            </main>\n        </AuthContext.Provider>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}